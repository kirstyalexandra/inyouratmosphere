// Kirsty Alexandra Nguegang
// COMP 151
// Lab 10: Searching


                                                                                    TrinarySearch Output
Accounts are:
[0] 5658845
[1] 8080152
[2] 1005231
[3] 4520125
[4] 4562555
[5] 6545231
[6] 7895122
[7] 5552012
[8] 3852085
[9] 8777541
[10] 5050552
[11] 7576651
[12] 8451277
[13] 7825877
[14] 7881200
[15] 1302850
[16] 1250255
[17] 4581002
Sorted accounts are:
[0] 1005231
[1] 1250255
[2] 1302850
[3] 3852085
[4] 4520125
[5] 4562555
[6] 4581002
[7] 5050552
[8] 5552012
[9] 5658845
[10] 6545231
[11] 7576651
[12] 7825877
[13] 7881200
[14] 7895122
[15] 8080152
[16] 8451277
[17] 8777541

trinarySearch: element 7881200 is found true
   PASS

trinarySearch: element 7881199 is found false
   PASS

trinarySearch: element 7881201 is found false
   PASS

trinarySearch: element 2222222 is found false
   PASS

trinarySearch: element 9999999 is found false
   PASS

trinarySearch: element 0000000 is found false
   PASS

trinarySearch: element 1111111 is found false
   PASS

trinarySearch: element 1005231 is found true
   PASS

trinarySearch: element 8777541 is found true
   PASS

*** Done ***

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                                    SortedArrayListWithMode Output

---> mode is null; mode count is 0
The mode of the empty list should be null, got: null

The data has 1 element(s): 9
---> mode is 9; mode count is 1
The mode should be 9, got: 9

The data has 2 element(s): 9 13
---> mode is 9; mode count is 1
The mode should be 9, got: 9

The data has 3 element(s): 9 13 13
---> mode is 13; mode count is 2
The mode should be 13, got: 13

The data has 3 element(s): 9 9 13
---> mode is 9; mode count is 2
The mode should be 9, got: 9

The data has 10 element(s): 0 1 2 3 4 5 6 7 8 9
---> mode is 0; mode count is 1
The mode should be 0, got: 0

The data has 55 element(s): 0 1 1 2 2 2 3 3 3 3 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9
---> mode is 9; mode count is 10
The mode should be 9, got: 9

The data has 133 element(s): 0 1 1 2 2 2 3 3 3 3 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 10 10 11 11 11 12 12 12 12 13 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 15 15 16 16 16 16 16 16 16 16 17 17 17 17 17 17 17 17 17 18 18 18 18 18 18 18 18 18 18 19 19 19 19 19 19 19 19 19 19 19 20 20 20 20 20 20 20 20 20 20 20 20
---> mode is 20; mode count is 12
The mode should be 20, got: 20

The data has 147 element(s): 0 1 1 2 2 2 3 3 3 3 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 10 10 11 11 11 12 12 12 12 13 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 15 15 16 16 16 16 16 16 16 16 17 17 17 17 17 17 17 17 17 18 18 18 18 18 18 18 18 18 18 19 19 19 19 19 19 19 19 19 19 19 20 20 20 20 20 20 20 20 20 20 20 20
---> mode is 6; mode count is 21
The mode should be 6, got: 6

*** Done ***
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                                    SortedLinkedListWithMode Output

---> mode is null; mode count is 0
The mode of the empty list should be null, got: null

The data has 1 element(s): 9
---> mode is 9; mode count is 1
The mode should be 9, got: 9

The data has 2 element(s): 9 13
---> mode is 9; mode count is 1
The mode should be 9, got: 9

The data has 3 element(s): 9 13 13
---> mode is 13; mode count is 2
The mode should be 13, got: 13

The data has 3 element(s): 9 9 13
---> mode is 9; mode count is 2
The mode should be 9, got: 9

The data has 10 element(s): 0 1 2 3 4 5 6 7 8 9
---> mode is 0; mode count is 1
The mode should be 0, got: 0

The data has 55 element(s): 0 1 1 2 2 2 3 3 3 3 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9
---> mode is 9; mode count is 10
The mode should be 9, got: 9

The data has 133 element(s): 0 1 1 2 2 2 3 3 3 3 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 10 10 11 11 11 12 12 12 12 13 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 15 15 16 16 16 16 16 16 16 16 17 17 17 17 17 17 17 17 17 18 18 18 18 18 18 18 18 18 18 19 19 19 19 19 19 19 19 19 19 19 20 20 20 20 20 20 20 20 20 20 20 20
---> mode is 20; mode count is 12
The mode should be 20, got: 20

The data has 147 element(s): 0 1 1 2 2 2 3 3 3 3 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 10 10 11 11 11 12 12 12 12 13 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 15 15 16 16 16 16 16 16 16 16 17 17 17 17 17 17 17 17 17 18 18 18 18 18 18 18 18 18 18 19 19 19 19 19 19 19 19 19 19 19 20 20 20 20 20 20 20 20 20 20 20 20
---> mode is 6; mode count is 21
The mode should be 6, got: 6

*** Done ***
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                                    SortedListWithMode Output

---> mode is null; mode count is 0
The mode of the empty list should be null, got: null

The data has 1 element(s): 9
---> mode is 9; mode count is 1
The mode should be 9, got: 9

The data has 2 element(s): 9 13
---> mode is 9; mode count is 1
The mode should be 9, got: 9

The data has 3 element(s): 9 13 13
---> mode is 13; mode count is 2
The mode should be 13, got: 13

The data has 3 element(s): 9 9 13
---> mode is 9; mode count is 2
The mode should be 9, got: 9

The data has 10 element(s): 0 1 2 3 4 5 6 7 8 9
---> mode is 0; mode count is 1
The mode should be 0, got: 0

The data has 55 element(s): 0 1 1 2 2 2 3 3 3 3 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9
---> mode is 9; mode count is 10
The mode should be 9, got: 9

The data has 133 element(s): 0 1 1 2 2 2 3 3 3 3 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 10 10 11 11 11 12 12 12 12 13 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 15 15 16 16 16 16 16 16 16 16 17 17 17 17 17 17 17 17 17 18 18 18 18 18 18 18 18 18 18 19 19 19 19 19 19 19 19 19 19 19 20 20 20 20 20 20 20 20 20 20 20 20
---> mode is 20; mode count is 12
The mode should be 20, got: 20

The data has 147 element(s): 0 1 1 2 2 2 3 3 3 3 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 10 10 11 11 11 12 12 12 12 13 13 13 13 13 14 14 14 14 14 14 15 15 15 15 15 15 15 16 16 16 16 16 16 16 16 17 17 17 17 17 17 17 17 17 18 18 18 18 18 18 18 18 18 18 19 19 19 19 19 19 19 19 19 19 19 20 20 20 20 20 20 20 20 20 20 20 20
---> mode is 6; mode count is 21
The mode should be 6, got: 6

*** Done ***
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                                    InterpolationSearch Output

Searching uniformly distributed sorted array: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22

--> p = 13
PASSES: 14 was found at index 13
PASSES: 1 was found at index 0
--> p = 21
PASSES: 22 was found at index 21
--> p = 19
PASSES: 20 was found at index 19
PASSES: 23456 was not found
PASSES: -6 was not found
--> p = 11
PASSES: 12 was found at index 11


Searching non-uniformly distributed sorted array: -10 -5 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 200 700 12345

--> p = 0
--> p = 1
--> p = 2
--> p = 3
--> p = 4
--> p = 5
--> p = 6
--> p = 7
--> p = 8
--> p = 9
--> p = 10
--> p = 11
--> p = 12
PASSES: 14 was found at index 13
PASSES: -10 was found at index 0
--> p = 21
PASSES: 12345 was found at index 21
--> p = 0
--> p = 1
--> p = 2
--> p = 3
--> p = 4
--> p = 5
--> p = 6
--> p = 7
--> p = 8
--> p = 9
--> p = 10
--> p = 11
--> p = 12
--> p = 13
--> p = 14
--> p = 15
--> p = 16
--> p = 17
--> p = 18
PASSES: 200 was found at index 19
PASSES: 23456 was not found
--> p = 0
PASSES: -6 was not found
--> p = 0
--> p = 1
--> p = 2
--> p = 3
--> p = 4
--> p = 5
--> p = 6
--> p = 7
--> p = 8
--> p = 9
--> p = 10
PASSES: 12 was found at index 11

*** Done ***
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                                    IntervalSearch Output

"C:\Program Files\Java\jdk1.8.0_162\bin\java" "-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2017.3.2\lib\idea_rt.jar=50112:C:\Program Files\JetBrains\IntelliJ IDEA 2017.3.2\bin" -Dfile.encoding=UTF-8 -classpath "C:\Program Files\Java\jdk1.8.0_162\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_162\jre\lib\rt.jar;C:\Users\Bertrand\inyouratmosphere\out\production\inyouratmosphere" Lab10.IntervalSearch
How many elements in the array?
17
The sorted data is:
[0]=6  [1]=10  [2]=15  [3]=19  [4]=19  [5]=23  [6]=31  [7]=40  [8]=40  [9]=44  [10]=44  [11]=46  [12]=54  [13]=55  [14]=60  [15]=62  [16]=63
Enter the list of integer values separated by spaces (all on one line), or just press enter if you are done.
19
Target list is [19]
The interval is: (3, 4)

Enter the list of integer values separated by spaces (all on one line), or just press enter if you are done.
40
Target list is [40]
The interval is: (7, 8)

Enter the list of integer values separated by spaces (all on one line), or just press enter if you are done.
44
Target list is [44]
The interval is: (9, 10)

Enter the list of integer values separated by spaces (all on one line), or just press enter if you are done.
70 80
Target list is [70, 80]
The interval is: (17, 17)

Enter the list of integer values separated by spaces (all on one line), or just press enter if you are done.
2 3
Target list is [2, 3]
The interval is: (-1, -1)

Enter the list of integer values separated by spaces (all on one line), or just press enter if you are done.
19 46
Target list is [19, 46]
The interval is: (3, 11)

Enter the list of integer values separated by spaces (all on one line), or just press enter if you are done.
3 25
Target list is [3, 25]
The interval is: (-1, 6)

Enter the list of integer values separated by spaces (all on one line), or just press enter if you are done.
8 35
Target list is [8, 35]
The interval is: (0, 7)

Enter the list of integer values separated by spaces (all on one line), or just press enter if you are done.
23 80
Target list is [23, 80]
The interval is: (5, 17)

Enter the list of integer values separated by spaces (all on one line), or just press enter if you are done.
35
Target list is [35]
The interval is: (6, 7)


*** Done ***

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

                                                                                    Packet/Message Output

RUN #1

    Enter the message to be sent
    I love Data Structures
    Enter the packet size (no smaller than 3)
    3
    The original message is "I love Data Structures"
    Sent packets:[ 0 I l,  1 ove,  2  Da,  3 ta ,  4 Str,  5 uct,  6 ure,  7 s]
    Received packets:[ 2  Da,  6 ure,  1 ove,  5 uct,  0 I l,  7 s,  3 ta ,  4 Str]
    The message assembled back is "I love Data Structures"

    *** Done ***

RUN #2

    Enter the message to be sent
    abc
    Enter the packet size (no smaller than 3)
    3
    The original message is "abc"
    Sent packets:[ 0 abc]
    Received packets:[ 0 abc]
    The message assembled back is "abc"

    *** Done ***

RUN #3

    Enter the message to be sent
    ab
    Enter the packet size (no smaller than 3)
    3
    The original message is "ab"
    Sent packets:[ 0 ab]
    Received packets:[ 0 ab]
    The message assembled back is "ab"

    *** Done ***

RUN #4

    Enter the message to be sent
    Happy Halloween !!!
    Enter the packet size (no smaller than 3)
    4
    The original message is "Happy Halloween !!!"
    Sent packets:[ 0 Happ,  1 y Ha,  2 llow,  3 een ,  4 !!!]
    Received packets:[ 4 !!!,  1 y Ha,  3 een ,  0 Happ,  2 llow]
    The message assembled back is "Happy Halloween !!!"

    *** Done ***




